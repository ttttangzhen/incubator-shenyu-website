<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache ShenYu(current) on ShenYu</title><link>/projects/shenyu/</link><description>Recent content in Apache ShenYu(current) on ShenYu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="/projects/shenyu/index.xml" rel="self" type="application/rss+xml"/><item><title>A multilingual HTTP client</title><link>/projects/shenyu/developer-shenyu-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/developer-shenyu-client/</guid><description> Description This document focuses on how to access gateways for HTTP services in other languages. How to customize the development of shenyu-http-client. Customize Http Client Request Method: POST Request Path: http://soul-admin/soul-client/springmvc-register, shenyu-admin represents IP + Port of admin Request Params：passing JSON type parameters through the body. { &amp;quot;appName&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;context&amp;quot;: &amp;quot;/xxx&amp;quot;, //required &amp;quot;path&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;pathDesc&amp;quot;: &amp;quot;xxx&amp;quot;, &amp;quot;rpcType&amp;quot;: &amp;quot;http&amp;quot;, //required &amp;quot;host&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;port&amp;quot;: xxx, //required &amp;quot;ruleName&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;enabled&amp;quot;: &amp;quot;true&amp;quot;, //required &amp;quot;registerMetaData&amp;quot;: &amp;quot;true&amp;quot; //required }</description></item><item><title>Apache ShenYu Introduction</title><link>/projects/shenyu/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/overview/</guid><description> What is the Apache ShenYu? This is an asynchronous, high-performance, cross-language, responsive API gateway.
Features Support various languages (http protocol), support Dubbo, Spring-Cloud, Grpc, Motan, Sofa, Tars and other protocols. Plugin design idea, plugin hot swap, easy to expand. Flexible flow filtering to meet various flow control. Built-in rich plugin support, authentication, limiting, fuse, firewall, etc. Dynamic flow configuration, high performance. Support cluster deployment, A/B Test, blue-green release. Architecture Diagram</description></item><item><title>Authority Management</title><link>/projects/shenyu/authority-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/authority-management/</guid><description>Explanation Manage and control the permissions of requests passing through the ShenYu gateway. Generate AK/SK and use it with the Sign plugin to achieve precise authority control based on URI level. Tutorial First, we can add a piece of authentication information in BasicConfig - Authentication Then configure this authentication information AppName：The application name associated with this account, it can can fill in or choose (data comes from the application name configured in the Metadata).</description></item><item><title>Configuration Flow Introduction</title><link>/projects/shenyu/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/config/</guid><description>Description This article introduces the flow of synchronizing to the gateway after the data operation of shenyu-admin backend system. Usage User can arbitrary modify data in shenyu-admin backend and this will immediately synchronize to the jvm memory of the gateway. Synchronize the plugin data of ShenYu, selector,rule data, metadata, signature data, etc. All the rules of plugin selectors are dynamically configured and take effect immediately without restarting the service.</description></item><item><title>Custom Deployment</title><link>/projects/shenyu/deployment-custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-custom/</guid><description>This article describes how to build your own gateway based on Apache ShenYu.
Start Apache ShenYu Admin docker reference docker deployment Apache ShenYu Admin
liunx/windows reference source code deployment Apache ShenYu Admin
Build your own gateway (recommended) first create an empty springboot project, you can refer to shenyu-bootstrap, or you can create it on spring official website.
introduce the following jar package:
&amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Custom Plugin</title><link>/projects/shenyu/custom-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-plugin/</guid><description>Description Plugins are core executors of ShenYu gateway. Every plugin handles matched requests when enabled. There are two kinds of plugins in the ShenYu gateway. The first type is a call chain with a single responsibility, and traffic cannot be customized. The other one can do its own chain of responsibility for matched traffic. You could reference from shenyu-plugin module and develop plugins by yourself. Please fire pull requests of your wonderful plugins without hesitate.</description></item><item><title>Custom Response</title><link>/projects/shenyu/custom-result/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-result/</guid><description>Description This doc offers examples for customising response structure. The response body structure in gateways should be unified, it is recommended for specify yours. Default Implementation The default implementation class is org.apache.shenyu.plugin.api.result.DefaultShenyuResult. Following is the response structure. public class ShenyuDefaultEntity implements Serializable { private static final long serialVersionUID = -2792556188993845048L; private Integer code; private String message; private Object data; } The returned json as follows: { &amp;quot;code&amp;quot;: -100, //response code,</description></item><item><title>Custom Sign Algorithm</title><link>/projects/shenyu/custom-sign-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-sign-algorithm/</guid><description>Description Users can customize the signature authentication algorithm to achieve verification. Extension The default implementation is org.apache.shenyu.plugin.sign.service.DefaultSignService. Declare a new class named &amp;ldquo;A&amp;rdquo; and implements org.apache.shenyu.plugin.api.SignService. public interface SignService { /** * Sign verify pair. * * @param exchange the exchange * @return the pair */ Pair&amp;lt;Boolean, String&amp;gt; signVerify(ServerWebExchange exchange); } When returning true in Pair, the sign verification passes. If there&amp;rsquo;s false, the String in Pair will be return to the frontend to show.</description></item><item><title>Data Synchronization Design</title><link>/projects/shenyu/data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/data-sync/</guid><description>Description This article mainly explains three ways of database synchronization and their principles.
Preface Gateway is the entrance of request and it is a very important part in micro service architecture, therefore the importance of gateway high availability is self-evident. When we use gateway, we have to change configuration such as flow rule, route rule for satisfying business requirement. Therefore, the dynamic configuration of the gateway is an important factor to ensure the high availability of the gateway.</description></item><item><title>Database Design</title><link>/projects/shenyu/database-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/database-design/</guid><description>Plugin Design Plugin use database to store plugin, selector, rule configuration data and relationship.
The Database Table UML Diagram: Detailed design:
One plugin corresponds to multiple selectors,one selector corresponds to multiple rules.
One selector corresponds to multiple match conditions,one rule corresponds to multiple match conditions.
Each rule handles differently in corresponding plugin according to field handler,field handler is a kind of data of JSON string type.</description></item><item><title>Dict Management</title><link>/projects/shenyu/dictionary-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dictionary-management/</guid><description>Explanation Dictionary management is primarily used to maintain and manage common data dictionaries. Table design sql CREATE TABLE IF NOT EXISTS `shenyu_dict` ( `id` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;primary key id&#39;, `type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;type&#39;, `dict_code` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;dictionary encoding&#39;, `dict_name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;dictionary name&#39;, `dict_value` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;dictionary value&#39;, `desc` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;dictionary description or remarks&#39;, `sort` int(4) NOT NULL COMMENT &#39;sort&#39;, `enabled` tinyint(4) DEFAULT NULL COMMENT &#39;whether it is enabled&#39;, `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;create time&#39;, `date_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;update time&#39;, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci; The current usage scenario is when the plugin handle configuring the data_type=3 (select box) eg.</description></item><item><title>Divide Plugin</title><link>/projects/shenyu/divide-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/divide-plugin/</guid><description>Explanation Divide is the core processing plugin for gateway to process http requests. Plugin Setting Enable plugin, shenyu-admin &amp;ndash;&amp;gt; plugin management&amp;ndash;&amp;gt; divide set to enable.
Divide plugin，cooperate with starter to take effect，please refer to：user-http。
&amp;lt;!--if you use http proxy start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-divide&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Plugin Detail Divide is a plugin for http forward proxy, and all http requests are called by this plugin in load balancing.</description></item><item><title>Doc Download</title><link>/projects/shenyu/download/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/download/</guid><description>Latest Releases Apache ShenYu is released as source code tarballs with corresponding binary tarballs for convenience.
Apache Shenyu - Version: 2.3.0 ( Release Date: Apr 2, 2020 )
Source Codes: zip tar ShenYu-admin Binary Distribution: tar ShenYu-bootstrap Binary Distribution: tar Apache Shenyu Dashboard - Version: 2.3.0 ( Release Date: Apr 2, 2020 )
Source Codes: zip tar ShenYu-dashboard Binary Distribution: tar PDF Apache ShenYu provides a packaged and downloaded PDF of the blog for users and developers to use.</description></item><item><title>Docker Deployment</title><link>/projects/shenyu/deployment-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-docker/</guid><description>This article introduces the use of docker to deploy the Apache ShenYu gateway.
Start Apache ShenYu Admin &amp;gt; docker pull apache/shenyu-admin &amp;gt; docker network create shenyu use h2 to store data:
&amp;gt; docker run -d -p 9095:9095 --net shenyu apache/shenyu-admin use MySQL to store data, copy mysql-connector.jar to /$(your_work_dir)/ext-lib：
docker run -v /${your_work_dir}/ext-lib:/opt/shenyu-admin/ext-lib -e &amp;quot;SPRING_PROFILES_ACTIVE=mysql&amp;quot; -e &amp;quot;spring.datasource.url=jdbc:mysql://${your_ip_port}/shenyu?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;useSSL=false&amp;quot; -e &amp;quot;spring.datasource.user=${your_username}&amp;quot; -e &amp;quot;spring.datasource.password=${your_password}&amp;quot; -d -p 9095:9095 --net shenyu apache/shenyu-admin another way is to put the application.</description></item><item><title>Dubbo Plugin</title><link>/projects/shenyu/dubbo-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dubbo-plugin/</guid><description>Explanation Dubbo is a plugin that converts http protocol into Dubbo protocol and it is also the key for gateway to realize dubbo generic service. Dubbo plugin needs to cooperate with metadata to realize dubbo calls, please refer to: metaData. Apache dubbo and alibaba dubbo users both use the same plugin. &amp;lt;!--if you use dubbo start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-alibab-dubbo&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-apache-dubbo&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management-&amp;gt; dubbo setting enable.</description></item><item><title>Environment Setup</title><link>/projects/shenyu/shenyu-set-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/shenyu-set-up/</guid><description>Features ShenYu is an open source plugin framework, which is flexibility and extensibility since 2.2.0 version. With shenyu you can easily create application with your own gateway. System Requirement: JDK 1.8+, Mysql 5.5.20 +. Shenyu-Admin remote download 2.3.0 download shenyu-admin-bin-2.3.0-RELEASE.tar.gz tar shenyu-admin-bin-2.3.0-RELEASE.tar.gz. cd /bin. use h2 store. &amp;gt; windwos : start.bat --spring.profiles.active = h2 &amp;gt; linux : ./start.sh --spring.profiles.active = h2 use mysql store. cd /conf and then modify mysql</description></item><item><title>Fetching Correct IP Address And Host</title><link>/projects/shenyu/custom-parsing-ip-and-host/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-parsing-ip-and-host/</guid><description>Description This doc demonstrates how to get correct IP address and host when ShenYu serves behind nginx reverse proxy. After fetched real IP and host, you can match them with plugins and selectors. Default Implementation The embedded implementation in ShenYu is :org.apache.shenyu.web.forward.ForwardedRemoteAddressResolver。
You need to config X-Forwarded-For in nginx first to get correct IP address and host.
Implement through a Plugin Declare a new class named &amp;ldquo;A&amp;rdquo; and implements org.</description></item><item><title>File Uploading And Downloading</title><link>/projects/shenyu/file-and-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/file-and-image/</guid><description> description This doc gives a brief description for uploading and downloading files using ShenYu. File Uploading The default file size limit is 10M. For custom limitation, use--file.size with an integer variable. e.g.--file.size = 30 Upload your files just as way you did before File Downloading ShenYu supports downloading files in streams. There is no need to change anything.</description></item><item><title>Filter Extension</title><link>/projects/shenyu/custom-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-filter/</guid><description>Description This doc shows a demo for how to extend org.springframework.web.server.WebFliter. CORS Support org.apache.shenyu.web.filter.CrossFilter is designed for WebFilter implementation. public class CrossFilter implements WebFilter { private static final String ALLOWED_HEADERS = &amp;quot;x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN,token,username,client&amp;quot;; private static final String ALLOWED_METHODS = &amp;quot;*&amp;quot;; private static final String ALLOWED_ORIGIN = &amp;quot;*&amp;quot;; private static final String ALLOWED_EXPOSE = &amp;quot;*&amp;quot;; private static final String MAX_AGE = &amp;quot;18000&amp;quot;; @Override @SuppressWarnings(&amp;quot;all&amp;quot;) public Mono&amp;lt;Void&amp;gt; filter(final ServerWebExchange exchange, final WebFilterChain chain) { ServerHttpRequest request = exchange.</description></item><item><title>Helm Deployment</title><link>/projects/shenyu/deployment-helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-helm/</guid><description>This article introduces the use of helm to deploy the Apache ShenYu gateway.</description></item><item><title>Hystrix Plugin</title><link>/projects/shenyu/hystrix-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/hystrix-plugin/</guid><description>Explanation Hystrix plugin is the core implementation used by gateway to fuse traffic. Use semaphores to process requests. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; hystrix, set to enable. If the user don&amp;rsquo;t use, please disable the plugin in the background. Plugin Instruction Introduce hystrix dependency in the pom.xml file of the gateway. &amp;lt;!-- shenyu hystrix plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-hystrix&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!</description></item><item><title>Integrate Http with shenyu gateway</title><link>/projects/shenyu/http-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/http-proxy/</guid><description>Features This chapter is a guide about integrating Http service with ShenYu Gateway. ShenYu Gateway uses divide plugin handling http request, pls enable it in shenyu-admin background. Please start shenyu-admin successfully before integrating and Environment Setup is Ok. Configure ShenYu Gateway as Http proxy. Add these dependencies in gateway&amp;rsquo;s pom.xml: &amp;lt;!--if you use http proxy start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-divide&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.</description></item><item><title>Integrate dubbo with ShenYu Gateway</title><link>/projects/shenyu/dubbo-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dubbo-proxy/</guid><description>Features This chapter is a guide about integrating dubbo service with ShenYu Gateway. Support Alibaba Dubbo(&amp;lt; 2.7.x) and Apache Dubbo (&amp;gt;=2.7.x). Please start shenyu-admin successfully before integrating, and Environment Setup is Ok. Configure shenyu gateway as Dubbo proxy Add these dependencies in gateway&amp;rsquo;s pom.xml. Alibaba dubbo user, configure the dubbo version and registry center with yours.
&amp;lt;!--shenyu alibaba dubbo plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-alibaba-dubbo&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!</description></item><item><title>Jwt plugin</title><link>/projects/shenyu/jwt-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/jwt-plugin/</guid><description>Explanation The jwt plug-in is for the ** token ** attribute or authorization ** of the http request header to carry the attribute value for authentication judgment and judge auth2.0 **. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management-&amp;gt; jwt, set to enable.
If the user don&amp;rsquo;t use, please disable the plugin in the background.
Edit configuration properties in the plugin.
# secretKey If enabled, required {&amp;quot;secretKey&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;filterPath&amp;quot;:[]} Plugin Use Add support for jwt in the pom.</description></item><item><title>Local Deployment</title><link>/projects/shenyu/deployment-local/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-local/</guid><description>This article introduces how to start the Apache ShenYu gateway in the local environment.
Environmental preparation Install JDK1.8+ locally Install Git locally Install Maven locally Choose a development tool, such as IDEA Download the compiled code Download
&amp;gt; git clone https://github.com/apache/incubator-shenyu.git &amp;gt; cd shenyu &amp;gt; mvn clean install -Dmaven.javadoc.skip=true -B -Drat.skip=true -Djacoco.skip=true -DskipITs -DskipTests use the development tool to start org.apache.shenyu.admin.ShenyuAdminBootstrap，Visit http://localhost:9095, the default username and password are: admin and 123456 respectively.</description></item><item><title>Logging Plugin</title><link>/projects/shenyu/logging-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/logging-plugin/</guid><description>Explanation When making invokes to the target service, ShenYu gateway also allows users to print the request information in the log that includes the request path, request method, request parameters, response header, response body &amp;hellip;etc. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; logging, set to enable. Introduce logging support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background.</description></item><item><title>MetaData Concept Design</title><link>/projects/shenyu/meta-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/meta-data/</guid><description>Description This article mainly explains the concept,design of metadata and how to connect in the ShenYu Gateway. Technical Solutions Add a new table in the database,and data can synchronize to the JVM memory of gateway according to the data synchronization scheme.
Table Structure:
CREATE TABLE IF NOT EXISTS `meta_data` ( `id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;id&#39;, `app_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;application name&#39;, `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;path,not repeatable&#39;, `path_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;path description&#39;, `rpc_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;rpc type&#39;, `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;service name&#39;, `method_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;method name&#39;, `parameter_types` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;multiple parameter types, split by comma&#39;, `rpc_ext` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;rpc extension information,json format&#39;, `date_created` datetime(0) NOT NULL COMMENT &#39;create date&#39;, `date_updated` datetime(0) NOT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT &#39;update date&#39;, `enabled` tinyint(4) NOT NULL DEFAULT 0 COMMENT &#39;enable status&#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic; Metadata design as below,the most important is using it in dubbo&amp;rsquo;s generalization call.</description></item><item><title>ModifyResponse Plugin</title><link>/projects/shenyu/modify-response-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/modify-response-plugin/</guid><description>Description modifyResponse is a native plugin of ShenYu Gateway and is used to edit response header and body and statusCode. Plugin Setting 在 shenyu-admin -&amp;gt; plugin management &amp;ndash;&amp;gt; modifyResponseset to enable. Plugin Use Introduce modifyResponse dependency in the pom.xml file of the gateway. &amp;lt;!-- shenyu modify response plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-modify-response&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- shenyu modify response plugin end--&amp;gt; Selectors and rules, please refer to:se</description></item><item><title>Monitor Plugin</title><link>/projects/shenyu/monitor-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/monitor-plugin/</guid><description>Explanation Monitor plugin is used to monitor its own running status(JVM-related) by gateway, include request response delay, QPS, TPS, and other related metrics. Technical Solutions Flow Diagram Make even tracking in ShenYu Gateway by asynchronous or synchronous mode.
The prometheus server pulls metrics&amp;rsquo; through http request, and then displays it by Grafana.
Plugin Setting In shenyu-admin&amp;ndash;&amp;gt; plugin management-&amp;gt; monitor, set to enable.</description></item><item><title>Motan quick start</title><link>/projects/shenyu/quick-start-motan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-motan/</guid><description>to do.</description></item><item><title>OAuth2 Plugin</title><link>/projects/shenyu/oauth2-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/oauth2-plugin/</guid><description>Explanation The OAuth2 plugin is implemented using Webflux OAuth2, so its configuration can refer to Spring Webflux OAuth2.Use OAuth2 plugin has two preconditions are indispensable. Ensure that the OAuth2 dependency is added to the pom of the gateway Ensure that the corresponding OAuth2 configuration exists in the gateway application.yml configuration file Plugin Setting Enable plugin, shenyu-admin –&amp;gt; plugin management–&amp;gt; oauth2 set to enable. If the user does not want to use this plugin, please disable this plugin in the admin background.</description></item><item><title>Plugin Context Path Mapping</title><link>/projects/shenyu/context-path-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/context-path-plugin/</guid><description>Explanation When making invokes to the target service, ShenYu Gateway also allows users to customize the context using the context_path plugin. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; context_path, set to enable. Introduce context_path support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. &amp;lt;!-- shenyu context_path plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-context-path&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!</description></item><item><title>Plugin Handle Explanation</title><link>/projects/shenyu/plugin-handle-explanation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/plugin-handle-explanation/</guid><description>Explanation In our Shenyu-Admin background, each plugin uses the Handle field to represent a different processing, and plugin processing is used to manage and edit custom processing fields in JSON. This feature is mainly used to support the plugin handling template configuration Table Design sql
CREATE TABLE IF NOT EXISTS `plugin_handle` ( `id` varchar(128) NOT NULL, `plugin_id` varchar(128) NOT NULL COMMENT &#39;plugin id&#39;, `field` varchar(100) NOT NULL COMMENT &#39;field&#39;, `label` varchar(100) DEFAULT NULL COMMENT &#39;label&#39;, `data_type` smallint(6) NOT NULL DEFAULT &#39;1&#39; COMMENT &#39;data type 1 number 2 string 3 select box&#39;, `type` smallint(6) NULL COMMENT &#39;type, 1 means selector, 2 means rule&#39;, `sort` int(4) NULL COMMENT &#39;sort&#39;, `ext_obj` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;extra configuration (json format data)&#39;, `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;create time&#39;, `date_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;update time&#39;, PRIMARY KEY (`id`), UNIQUE KEY `plugin_id_field_type` (`plugin_id`,`field`,`type`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic; Tutorial eg.</description></item><item><title>Quick start with Dubbo</title><link>/projects/shenyu/quick-start-dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-dubbo/</guid><description>This document introduces how to quickly access the ShenYu Gateway using Dubbo. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the setup and launch shenyu-admin and shenyu-bootstrap, In addition, if you use ZooKeeper for Dubbo, you need to download it in advance.
Run the shenyu-examples-dubbo project Downloadshenyu-examples-dubbo
replace the register address in shenyu-examples-alibaba-dubbo-service/src/main/resources/spring-dubbo.xml with your local zk address, such as:</description></item><item><title>Quick start with SpringCloud</title><link>/projects/shenyu/quick-start-springcloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-springcloud/</guid><description>This document introduces how to quickly access the ShenYu Gateway using SpringCloud. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the setup and launch shenyu-admin and shenyu-bootstrap.
Add the following dependencies to the shenyu-bootstrap&amp;rsquo;s pom.xml file: &amp;lt;!--shenyu springCloud plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-springcloud&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-commons&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-ribbon&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- If using Eureka as a registry needs to be introduced --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Quick start with Tars</title><link>/projects/shenyu/quick-start-tars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-tars/</guid><description>This document introduces how to quickly access the ShenYu Gateway using Tars. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the setup and launch shenyu-admin and shenyu-bootstrap.
Note: shenyu-bootstrap need to import tars dependencies
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-tars&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.tencent.tars&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;tars-client&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.7.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Run the shenyu-examples-tars project Download shenyu-examples-tars
Modify host in application.yml to be your local IP</description></item><item><title>Quick start with gRPC</title><link>/projects/shenyu/quick-start-grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-grpc/</guid><description>This document introduces how to quickly access the ShenYu Gateway using gRPC. You can get the code example of this document by clicking here.
1. Prepare For Environment. Please refer to the setup and launch shenyu-admin and shenyu-bootstrap.
Note: shenyu-bootstrap need to import gRPC dependencies
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-grpc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. Run the shenyu-examples-grpc project. Download shenyu-examples-grpc
Run the following command under shenyu-examples-grpc to generate Java code
mvn protobuf:compile mvn protobuf:compile-custom Execute the org.</description></item><item><title>Quick start with http</title><link>/projects/shenyu/quick-start-http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-http/</guid><description>This document introduces how to quickly access the ShenYu Gateway using Http. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the setup and launch shenyu-admin and shenyu-bootstrap.
Introducing gateway to HTTP proxy plugin
Add the following dependencies to the shenyu-bootstrap&amp;rsquo;s pom.xml file: &amp;lt;!--if you use http proxy start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-divide&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.</description></item><item><title>Quick start with sofa</title><link>/projects/shenyu/quick-start-sofa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-sofa/</guid><description>This document introduces how to quickly access the ShenYu Gateway using Sofa RPC. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the setup and launch shenyu-admin and shenyu-bootstrap, In addition, if you use ZooKeeper for Sofa, you need to download it in advance.
Note: shenyu-bootstrap need to import sofa dependencies
&amp;lt;!-- shenyu sofa plugin starter--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;sofa-rpc-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${sofa.rpc.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>RateLimiter Plugin</title><link>/projects/shenyu/rate-limiter-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/rate-limiter-plugin/</guid><description>Explanation rateLimiter is core implementation of gateway restrictions on network traffic.
The ShenYu gateway provides a variety of current limiting algorithms, including token bucket algorithm, concurrent token bucket algorithm, leaky bucket algorithm and sliding time window algorithm.
The implementation of current limiting algorithm of ShenYu gateway is based on redis.
You can set to the interface level or the parameter level. How to use it depends on your traffic configuration.</description></item><item><title>Redirect Plugin</title><link>/projects/shenyu/redirect-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/redirect-plugin/</guid><description>Explanation When the ShenYu gateway makes proxy calls to the target service, it also allows users to use the redirect plugin to redirect requests.
Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; redirect ,set to enable。 Introduce redirect support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. Selectors and rules, only matching requests will be forwarded and redirected, please see: Selector rules。 Maven Dependency Add the plugin dependency in the pom.</description></item><item><title>Register Center Access</title><link>/projects/shenyu/register-center-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/register-center-access/</guid><description>Explain Explain register center access config
HTTP Registry Shenyu-Admin Set the config in application.yml shenyu: register: registerType: http props: checked: true # is checked zombieCheckTimes: 5 # How many times does it fail to detect the service scheduledTime: 10 # Timed detection interval time Shenyu-Client Set the config in application.yml shenyu: client: registerType: http serverLists: http://localhost:9095 props: contextPath: /http appName: http port: 8188 isFull: false # registerType : register type, set http # serverList: when register type is http，set Shenyu-Admin address list，pls note &#39;http://&#39; is necessary.</description></item><item><title>Register Center Design</title><link>/projects/shenyu/register-center-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/register-center-design/</guid><description>Description This article mainly explains three ways of register center and their principles. Client When client server start, the register center client will be loaded by spi.
Put data to Disruptor when spring bean load.
ShenYu register client get data from Disruptor, and it will send request to register server.
Disruptor can decouple data from operation and facilitate expansion.
Server When Shenyu-Admin server start, register center server will be loaded by spi.</description></item><item><title>RequestPlugin</title><link>/projects/shenyu/request-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/request-plugin/</guid><description>Explanation When Shenyu Gateway makes proxy call to target service, it also allows users to add, modify and remove request headers by using &amp;lsquo;request&amp;rsquo; plugin to request parameters, request headers and cookies. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; request ,set to enable. Introduce request support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. &amp;lt;!</description></item><item><title>Resilience4j Plugin</title><link>/projects/shenyu/resilience4j-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/resilience4j-plugin/</guid><description>Explanation Resilience4j is one of the options that supports flow control and circuit breaking. Resilience4j supports flow control and circuit breaking functions for gateway. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; resilience4j set to enable. If you don&amp;rsquo;t want to use it, please close the plugin in shenyu-admin. Plugin Usage Introducing the follow supports to the pom.xml file of shenyu project. &amp;lt;!-- shenyu resilience4j plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Rewrite Plugin</title><link>/projects/shenyu/rewrite-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/rewrite-plugin/</guid><description>Explanation When making proxy invokes to the target service, ShenYu Gateway also allows users to rewrite the request path using the rewrite plugin. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; rewrite ,set to enable. Introduce rewrite support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. &amp;lt;!-- shenyu rewrite plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-rewrite&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.</description></item><item><title>Selector Detailed Explanation</title><link>/projects/shenyu/selector-and-rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/selector-and-rule/</guid><description>Features Selector and rule are the key point of ShenYu Gateway, you can manage any request with it.
This chapter is mainly focus on the concepts of selector and rule and how to use it.
Overview One plugin has many selector and a selector has many rules, selector is the first filter of request, and the rule is the final filter. Please consider this, it would be perfect when the plugin executes the request until it reached the config value.</description></item><item><title>Sentinel Plugin</title><link>/projects/shenyu/sentinel-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sentinel-plugin/</guid><description>Explanation Sentinel is one of the options that supports flow control and circuit breaking. Sentinel supports flow control and circuit breaking functions for gateway. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; sentinel set to enable. If you don&amp;rsquo;t want to use it, please close the plugin in shenyu-admin. Plugin Usage Introducing the follow supports to the pom.xml file of shenyu project. &amp;lt;!-- shenyu sentinel plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>ShenYu Optimize</title><link>/projects/shenyu/shenyu-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/shenyu-optimize/</guid><description>Description This doc shows how to do performance optimization for shenyu. Time Consumption ShenYu is JVM driven and processing time for a single request is nearly between 1-3 ms. Netty Optimization spring-webflux is one of dependencies of ShenYu, and it uses Netty in lower layer. The demo down below demonstrates tuning ShenYu by customizing params in Netty. @Bean public NettyReactiveWebServerFactory nettyReactiveWebServerFactory() { NettyReactiveWebServerFactory webServerFactory = new NettyReactiveWebServerFactory(); webServerFactory.</description></item><item><title>Sign Plugin</title><link>/projects/shenyu/sign-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sign-plugin/</guid><description>Explanation Sign is a native plugin of ShenYu Gateway and is used to process signature authentication of requests. Plugin Setting In shenyu-admin -&amp;gt; plugin management &amp;ndash;&amp;gt; sign set to enable. Plugin Usage Introducing sign dependency in the pom.xml file of the gateway &amp;lt;!-- shenyu sign plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-sign&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- shenyu sign plugin end--&amp;gt; Selectors and rules, please refer to: selector.</description></item><item><title>Sofa Plugin</title><link>/projects/shenyu/sofa-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sofa-plugin/</guid><description>Description The sofa plug-in is a plug-in that converts the HTTP protocol into the sofa protocol, and it is also the key to the gateway to realize the sofa generalization call. sThe sofa plug-in needs to cooperate with metadata to realize the call of Dubbo. Please refer to: Metadata。 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-sofa&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Plugin Settings First, go to shenyu-admin &amp;ndash;&amp;gt; plug-in management-&amp;gt; setting sofa is open.</description></item><item><title>Sofa RPC Proxy</title><link>/projects/shenyu/sofa-rpc-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sofa-rpc-proxy/</guid><description>Description This article is about sofa users using sofa plugin support,and the tutorial of connecting your own sofa service to the shenyu gateway. Before connecting, please start shenyu-admin correctly and Setup Environment Ok。 Introduce the plugin that the gateway supports for sofa Add the following dependencies in the gateway&amp;rsquo;s pom.xml file： Replace the sofa version with yours, and replace the jar package in the registry with yours, The following is a reference。 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.</description></item><item><title>Source Code Deployment</title><link>/projects/shenyu/deployment-package/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-package/</guid><description>This article introduces the deployment of the Apache ShenYu gateway using the source code.
Start Apache ShenYu Admin download 2.4.0 download apache-shenyu-admin-bin-2.4.0-RELEASE.tar.gz
unzip apache-shenyu-admin-bin-2.4.0-RELEASE.tar.gz。 go to the bin directory.
use h2 to store data：
&amp;gt; windows: start.bat --spring.profiles.active = h2 &amp;gt; linux: ./start.sh --spring.profiles.active = h2 use MySQL to store data, go to the /conf directory, and modify the configuration of mysql in application.yaml.
&amp;gt; windows: start.</description></item><item><title>SpringCloud Plugin</title><link>/projects/shenyu/spring-cloud-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spring-cloud-plugin/</guid><description>Explanation This plugin is the core of transforming http protocol into springCloud protocol. Introducing Plugin Support of SpringCould Gateway Introducing those dependencies in the pom.xml file of the gateway. &amp;lt;!--shenyu springCloud plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-springcloud&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--shenyu springCloud plugin end--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-commons&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-ribbon&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management-&amp;gt; springCloud, set to enable.</description></item><item><title>SpringCloud Proxy</title><link>/projects/shenyu/spring-cloud-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spring-cloud-proxy/</guid><description>Features This article is a guide about how to integrate Spring Cloud with shenyu gateway quickly. Please enable springCloud plugin in shenyu-admin background. Please start shenyu-admin successfully before integrating and Environment Setup is Ok. Configure shenyu gateway as Spring Cloud proxy add these dependencies in gateway&amp;rsquo;s pom.xml: &amp;lt;!--shenyu springCloud plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-springcloud&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--shenyu springCloud plugin end--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-commons&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Thread Model</title><link>/projects/shenyu/thread/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/thread/</guid><description>Description This article gives an introduction to thread models in ShenYu and usage in various scenarios. IO And Work Thread spring-webflux is one of dependencies of ShenYu, and it uses Netty thread model in lower layer. Business Thread Use scheduling thread to execute by default. A fixed thread pool manages business threads, the number of threads is count in this formula: cpu * 2 + 1.</description></item><item><title>Use Different Data-Sync Strategy</title><link>/projects/shenyu/use-data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/use-data-sync/</guid><description>Features Data synchronization is the key of gateway high performance, which is to sync &amp;lsquo;shenyu-admin&amp;rsquo; config data into the JVM memory of ShenYu cluster. Implementation principles, pls refer to：dataSync。 In the article, the gateway is the environment you setup. please refer to：Environment Setup. Websocket sync（default method，recommend） gateway setting（note:restart）
Add these dependencies in pom.xml： &amp;lt;!--shenyu data sync start use websocket--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-sync-data-websocket&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; add these config values in springboot yaml file: shenyu: sync: websocket : urls: ws://localhost:9095/websocket #urls: address of shenyu-admin，multi-address will be splitted with (,).</description></item><item><title>Waf Plugin</title><link>/projects/shenyu/waf-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/waf-plugin/</guid><description>Explanation Waf is the core implementation of gateway to realize firewall function for network traffic. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management-&amp;gt; waf set to enable. If the user don&amp;rsquo;t use, please disable the plugin in the background. Add configuration mode in plugin editing. {&amp;quot;model&amp;quot;:&amp;quot;black&amp;quot;} # The default mode is blacklist mode; If setting is mixed, it will be mixed mode. We will explain it specifically below.</description></item><item><title>Websocket Plugin</title><link>/projects/shenyu/websocket-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/websocket-plugin/</guid><description>Explanation ShenYu gateway also support proxy of websocket. In websocket support, divide plugin is used in it. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; divide, set to enable. Introducing dependencies in the pom.xml file of the gateway &amp;lt;!--if you use http proxy start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-divide&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Request Path When using shenyu proxy websocket, its request path is (example):ws://localhost:9195/?</description></item><item><title>flow-control</title><link>/projects/shenyu/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/flow-control/</guid><description>to do.</description></item><item><title>grpc-plugin</title><link>/projects/shenyu/grpc-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/grpc-plugin/</guid><description>to do.</description></item><item><title>k8s Deployment</title><link>/projects/shenyu/deployment-k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-k8s/</guid><description>This article introduces the use of k8s to deploy the Apache ShenYu gateway.</description></item><item><title>motan-plugin</title><link>/projects/shenyu/motan-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/motan-plugin/</guid><description>to do.</description></item><item><title>param-mapping-plugin</title><link>/projects/shenyu/param-mapping-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/param-mapping-plugin/</guid><description>Description param_mapping is a native plugin of ShenYu Gateway and is used to edit your request param. Plugin Setting on shenyu-admin -&amp;gt; plugin management &amp;ndash;&amp;gt; param_mappingset to enable. Plugin Use Introduce param_mapping dependency in the pom.xml file of the gateway. &amp;lt;!-- shenyu param_mapping plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-param-mapping&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- shenyu param_mapping plugin end--&amp;gt; Selectors and rules, please refer to:selector。</description></item><item><title>release-notes</title><link>/projects/shenyu/release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/release-notes/</guid><description>2.3.0 soul-admin Add &amp;lsquo;open&amp;rsquo; field to allow app path authentication or not in sign plugin. Optimize divide plugin to use common plugin template in soul-dashboard. Add default values and rule checks in plugin handler. Add resource management to allow user to add plugin, adjust menu and button resource and so on in soul-dashboard and soul-admin. Add menu and data permission in soul-admin. Add H2 stroe for soul-admin
soul-bootstrap Add tars plugin</description></item><item><title>spi-design</title><link>/projects/shenyu/spi-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spi-design/</guid><description>to do.</description></item><item><title>tars-plugin</title><link>/projects/shenyu/tars-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/tars-plugin/</guid><description>to do.</description></item></channel></rss>