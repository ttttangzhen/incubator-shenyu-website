<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache ShenYu(current) on ShenYu</title><link>/zh/projects/shenyu/</link><description>Recent content in Apache ShenYu(current) on ShenYu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="/zh/projects/shenyu/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache ShenYu 介绍</title><link>/zh/projects/shenyu/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/overview/</guid><description>什么是 Apache ShenYu 这是一个异步的，高性能的，跨语言的，响应式的 API 网关。 功能 支持各种语言(http 协议)，支持 Dubbo、 Spring Cloud、 gRPC、 Mo</description></item><item><title>Context Path插件</title><link>/zh/projects/shenyu/context-path-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/context-path-plugin/</guid><description>说明 ShenYu 网关在对目标服务调用的时候，还容许用户使用 context_path 插件来重写请求路径的contextPath 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; context_path 设置为开启。 在网关的 pom.xml</description></item><item><title>Divide插件</title><link>/zh/projects/shenyu/divide-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/divide-plugin/</guid><description>说明 divide插件是网关处理 http协议请求的核心处理插件。 插件设置 开启插件，shenyu-admin &amp;ndash;&amp;gt; 插件管理&amp;ndash;&amp;gt; divide 设</description></item><item><title>Dubbo 接入 ShenYu 网关</title><link>/zh/projects/shenyu/dubbo-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/dubbo-proxy/</guid><description>说明 此篇文章是 dubbo 用户使用 dubbo 插件支持，以及自己的 dubbo 服务接入 ShenYu 网关的教程。 支持 alibaba dubbo（&amp;lt; 2.7.x） 以及 apache dubbo (&amp;gt;=2.7.x)</description></item><item><title>Dubbo快速开始</title><link>/zh/projects/shenyu/quick-start-dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-dubbo/</guid><description>本文档演示如何将Dubbo服务接入到ShenYu网关。您可以直接在工程下找到本文档的示例代码。 环境准备 请参考配置网关环境，并启动shenyu</description></item><item><title>Dubbo插件</title><link>/zh/projects/shenyu/dubbo-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/dubbo-plugin/</guid><description>说明 dubbo插件是将 http协议 转换成 dubbo协议 的插件，也是网关实现dubbo泛化调用的关键。 dubbo插件需要配合元数据才能实现du</description></item><item><title>Http 用户</title><link>/zh/projects/shenyu/http-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/http-proxy/</guid><description>说明 本文旨在帮助 http 用户。 ShenYu 网关使用 divide 插件来处理 http 请求。请求在 shenyu-admin 后台开启它。 接入前，请正确的启动 shenyu-admin，以及 搭建环境 OK。 引</description></item><item><title>Http快速开始</title><link>/zh/projects/shenyu/quick-start-http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-http/</guid><description>本文档演示如何将Http服务接入到ShenYu网关。您可以直接在工程下找到本文档的示例代码。 环境准备 请参考配置网关环境并启动shenyu-a</description></item><item><title>Hystrix插件</title><link>/zh/projects/shenyu/hystrix-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/hystrix-plugin/</guid><description>说明 hystrix插件是网关用来对流量进行熔断的核心实现。 使用信号量的方式来处理请求。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; hystrix，设置为开启。 如</description></item><item><title>Jwt插件</title><link>/zh/projects/shenyu/jwt-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/jwt-plugin/</guid><description>说明 jwt 插件，是针对 http 请求头的 ** token ** 属性或者是 ** authorization ** 属性携带值进行鉴权判断，兼容 auth2.0 。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理-&amp;gt; jwt 设置为开启。 如果用户不想</description></item><item><title>Logging插件</title><link>/zh/projects/shenyu/logging-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/logging-plugin/</guid><description>说明 ShenYu 网关在对目标服务调用的时候，还容许用户使用 logging 插件在日志中打印本次请求信息，包含请求路径、请求方法、请求参数和响应头、响应体等信息。 插件</description></item><item><title>ModifyResponse插件</title><link>/zh/projects/shenyu/modify-response-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/modify-response-plugin/</guid><description>说明 modifyResponse插件是 ShenYu 网关自带的，用来对响应进行修改的插件。 插件设置 在 shenyu-admin -&amp;gt; 插件管理中 &amp;ndash;&amp;gt; modifyResponse插件设置</description></item><item><title>Monitor插件</title><link>/zh/projects/shenyu/monitor-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/monitor-plugin/</guid><description>说明 monitor插件是网关用来监控自身运行状态（JVM相关），请求的响应迟延，QPS、TPS等相关metrics。 技术方案 流程图 异步或者同</description></item><item><title>Motan快速开始</title><link>/zh/projects/shenyu/quick-start-motan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-motan/</guid><description>to do.</description></item><item><title>Motan插件</title><link>/zh/projects/shenyu/motan-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/motan-plugin/</guid><description>to do.</description></item><item><title>OAuth 2插件</title><link>/zh/projects/shenyu/oauth2-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/oauth2-plugin/</guid><description>说明 OAuth2插件使用Webflux OAuth2实现，所以其配置可以参考Spring Webflux OAuth2的配置。使用OAuth2插件有2个前提条</description></item><item><title>Param-mapping插件</title><link>/zh/projects/shenyu/param-mapping-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/param-mapping-plugin/</guid><description>to do.</description></item><item><title>RequestPlugin</title><link>/zh/projects/shenyu/request-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/request-plugin/</guid><description>to do.</description></item><item><title>Resilience4j插件</title><link>/zh/projects/shenyu/resilience4j-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/resilience4j-plugin/</guid><description>说明 resilience4j插件是网关用来对流量进行限流与熔断的可选选择之一。 resilience4j为网关熔断限流提供能力。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt;</description></item><item><title>Rewrite插件</title><link>/zh/projects/shenyu/rewrite-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/rewrite-plugin/</guid><description>说明 ShenYu 网关在对目标服务进行代理调用的时候，还容许用户使用 rewrite 插件来重写请求路径 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; rewrite，设置为开启。 在网关的 pom.xml 文</description></item><item><title>SPI</title><link>/zh/projects/shenyu/spi-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/spi-design/</guid><description>to do.</description></item><item><title>Sentinel插件</title><link>/zh/projects/shenyu/sentinel-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/sentinel-plugin/</guid><description>说明 sentinel插件是网关用来对流量进行限流与熔断的可选选择之一。 sentinel为网关熔断限流提供能力。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; sen</description></item><item><title>ShenYu Admin数据结构</title><link>/zh/projects/shenyu/database-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/database-design/</guid><description>ShenYu Admin 是网关的后台管理系统，能够可视化管理所有插件、选择器和规则，设置用户、角色，控制资源。 插件、选择器和规则 插件：ShenYu 使用插件化设计</description></item><item><title>ShenYu 性能优化</title><link>/zh/projects/shenyu/shenyu-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/shenyu-optimize/</guid><description>说明 本文主要介绍如何对 ShenYu 进行优化 本身消耗 ShenYu 本身所有的操作，都是基于 jvm 内存来匹配，本身消耗时间大概在 1-3ms 左右。 底层netty调优 ShenYu内置</description></item><item><title>Sign插件</title><link>/zh/projects/shenyu/sign-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/sign-plugin/</guid><description>说明 sign插件是 ShenYu 网关自带的，用来对请求进行签名认证的插件。 插件设置 在 shenyu-admin -&amp;gt; 插件管理中 &amp;ndash;&amp;gt; sign插件设置为开启。 插件使用 在网关的 pom.xml 文件中添加</description></item><item><title>Sofa 接入网关</title><link>/zh/projects/shenyu/sofa-rpc-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/sofa-rpc-proxy/</guid><description>说明 此篇文章是 sofa 用户使用 sofa 插件支持，以及自己的 sofa 服务接入 shenyu 网关的教程。 接入前，请正确的启动 shenyu-admin 以及搭建环境 Ok。 引入网关对sofa支持的插件 在</description></item><item><title>Sofa快速开始</title><link>/zh/projects/shenyu/quick-start-sofa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-sofa/</guid><description>本文档演示如何将Sofa服务接入到ShenYu网关。您可以直接在工程下找到本文档的示例代码。 环境准备 请参考配置网关环境并启动shenyu-a</description></item><item><title>Sofa插件</title><link>/zh/projects/shenyu/sofa-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/sofa-plugin/</guid><description>说明 sofa插件是将http协议 转换成sofa协议 的插件，也是网关实现sofa泛化调用的关键。 sofa插件需要配合元数据才能实现dubbo的</description></item><item><title>Spring Cloud快速开始</title><link>/zh/projects/shenyu/quick-start-springcloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-springcloud/</guid><description>本文档演示如何将Spring Cloud服务接入到ShenYu网关。您可以直接在工程下找到本文档的示例代码。 环境准备 请参考配置网关环境并启动s</description></item><item><title>SpringCloud接入ShenYu网关</title><link>/zh/projects/shenyu/spring-cloud-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/spring-cloud-proxy/</guid><description>说明 此篇文章是教你如何将springCloud接口，快速接入到 ShenYu 网关。 请在 shenyu-admin 后台将 springCloud 插件设置为开启。 接入前，请正确的启动 shenyu-adm</description></item><item><title>SpringCloud插件</title><link>/zh/projects/shenyu/spring-cloud-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/spring-cloud-plugin/</guid><description>说明 该插件是用来将http协议 转成springCloud协议 的核心。 引入网关 springCloud的插件支持 在网关的 pom.xml 文件中引入如下依赖。 &amp;lt;!--shenyu</description></item><item><title>Tars快速开始</title><link>/zh/projects/shenyu/quick-start-tars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-tars/</guid><description>本文档演示如何将Tars服务接入到ShenYu网关。您可以直接在工程下找到本文档的示例代码。 环境准备 请参考配置网关环境并启动shenyu-a</description></item><item><title>Tars插件</title><link>/zh/projects/shenyu/tars-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/tars-plugin/</guid><description>to do.</description></item><item><title>Waf插件</title><link>/zh/projects/shenyu/waf-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/waf-plugin/</guid><description>说明 waf插件，是网关的用来对流量实现防火墙功能的核心实现。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理-&amp;gt; waf 设置为开启。 如果用户不想使用此功能，请在adm</description></item><item><title>Websocket支持</title><link>/zh/projects/shenyu/websocket-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/websocket-plugin/</guid><description>说明 ShenYu 网关是支持 websocket的代理。 websocket支持中，使用了divide插件。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; divide，设置为开启</description></item><item><title>docker部署</title><link>/zh/projects/shenyu/deployment-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-docker/</guid><description>本文介绍使用docker来部署Apache ShenYu网关。 启动Apache ShenYu Admin &amp;gt; docker pull apache/shenyu-admin &amp;gt; docker network create shenyu 使用 h2 来存储后台数据： &amp;gt; docker run -d -p 9095:9095 --net shenyu apache/shenyu-admin 使</description></item><item><title>gRPC快速开始</title><link>/zh/projects/shenyu/quick-start-grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/quick-start-grpc/</guid><description>本文档演示如何将gRPC服务接入到ShenYu网关。您可以直接在工程下找到本文档的 示例代码。 1. 环境准备 请参考 配置网关环境 并启动 shenyu-</description></item><item><title>gRPC插件</title><link>/zh/projects/shenyu/grpc-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/grpc-plugin/</guid><description>to do.</description></item><item><title>helm部署</title><link>/zh/projects/shenyu/deployment-helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-helm/</guid><description>本文介绍使用 helm 来部署 Apache ShenYu 网关。</description></item><item><title>k8s部署</title><link>/zh/projects/shenyu/deployment-k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-k8s/</guid><description>本文介绍使用k8s来部署Apache ShenYu网关。</description></item><item><title>使用不同的数据同步策略</title><link>/zh/projects/shenyu/use-data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/use-data-sync/</guid><description>说明 数据同步是指将 shenyu-admin 配置的数据，同步到 ShenYu 集群中的JVM内存里面，是网关高性能的关键。 实现原理，请看：数据同步。 文中所说的网关，是指你搭建的网</description></item><item><title>元数据概念设计</title><link>/zh/projects/shenyu/meta-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/meta-data/</guid><description>说明 本篇主要讲解在 ShenYu 网关中元数据的概念，设计，以及如何对接。 技术方案 在数据库中，新增了一张表，然后通过数据同步的方案，会把这张表的数据同步到</description></item><item><title>多语言http客户端</title><link>/zh/projects/shenyu/developer-shenyu-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/developer-shenyu-client/</guid><description>说明 本文主要讲解其他语言的http服务如何接入网关。 如何自定义开发 shenyu-http-client。 自定义开发 请求方式：POST 请求路径</description></item><item><title>字典管理</title><link>/zh/projects/shenyu/dictionary-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/dictionary-management/</guid><description>说明 字典管理主要用来维护和管理公用数据字典 表设计 sql CREATE TABLE IF NOT EXISTS `shenyu_dict` ( `id` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;主键id&#39;, `type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;类型&#39;, `dict_code` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;字典编码</description></item><item><title>应用客户端接入</title><link>/zh/projects/shenyu/register-center-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/register-center-design/</guid><description>应用客户端接入是指将你的微服务接入到ShenYu网关，当前支持Http、 Dubbo、 Spring Cloud、 gRPC、 Motan、 Sofa、 Tars等</description></item><item><title>插件</title><link>/zh/projects/shenyu/plugin-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/plugin-design/</guid><description>to do.</description></item><item><title>插件处理详解</title><link>/zh/projects/shenyu/plugin-handle-explanation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/plugin-handle-explanation/</guid><description>使用教程 比如开发springCloud插件时规则表需要存一些配置到handle字段，配置对应的实体类如下： public class SpringCloudRuleHandle implements RuleHandle { /** * this remote uri path. */ private String path; /**</description></item><item><title>插件扩展</title><link>/zh/projects/shenyu/custom-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/custom-plugin/</guid><description>说明 插件是 ShenYu 网关的核心执行者，每个插件在开启的情况下，都会对匹配的流量，进行自己的处理。 在 ShenYu 网关里面，插件其实分为2 类。 一类是单一职责的调用</description></item><item><title>数据同步</title><link>/zh/projects/shenyu/data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/data-sync/</guid><description>本篇主要讲解在 shenyu-admin 后台操作数据以后，如何将数据同步到 ShenYu 网关，内容包括数据同步的背景、原理及使用。 背景 网关是流量请求的入口，在微服务架构中承担了</description></item><item><title>文件上传下载</title><link>/zh/projects/shenyu/file-and-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/file-and-image/</guid><description>说明 本文主要介绍 ShenYu 的文件上传下载的支持。 文件上传 默认限制文件大小为10M。 如果想修改，在启动服务的时候，使用--file.size = 30，为</description></item><item><title>文档下载</title><link>/zh/projects/shenyu/download/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/download/</guid><description>最新版本 Apache ShenYu 的发布版包括源码包及其对应的二进制包。 Apache Shenyu - 版本: 2.3.0 ( 发布日期: Apr 2, 2020 ) 源码 zip tar ShenYu-admin 二进制包 tar ShenYu-bootstrap 二进制包 tar Apache Shenyu Dashboard - 版本: 2.3.0 ( 发布日</description></item><item><title>本地启动</title><link>/zh/projects/shenyu/deployment-local/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-local/</guid><description>本文介绍本地环境启动 Apache ShenYu 网关。 环境准备 本地正确安装JDK1.8+ 本地正确安装Git 本地正确安装Maven 选择一款开发工具，比如IDEA 下载编</description></item><item><title>权限管理</title><link>/zh/projects/shenyu/authority-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/authority-management/</guid><description>to do.</description></item><item><title>正确获取Ip与host</title><link>/zh/projects/shenyu/custom-parsing-ip-and-host/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/custom-parsing-ip-and-host/</guid><description>说明 本文是说明，如果网关前面有一层nginx 的时候，如何获取正确的ip与端口。 获取正确的之后，在插件以及选择器中，可以根据 ip，与host来</description></item><item><title>注册中心接入配置</title><link>/zh/projects/shenyu/register-center-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/register-center-access/</guid><description>说明 说明然后使用不同的注册方式，快速接入。 HTTP方式注册 Shenyu-Admin配置 在 application.yml 配置注册中心为HTTP即可，如下： shenyu: register: registerType: http props: checked: true #</description></item><item><title>流量控制</title><link>/zh/projects/shenyu/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/flow-control/</guid><description>ShenYu网关通过插件、选择器和规则完成流量控制。相关数据结构可以参考之前的 ShenYu Admin数据结构。 插件 在shenyu-admin后台，每个</description></item><item><title>源码包部署</title><link>/zh/projects/shenyu/deployment-package/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-package/</guid><description>本文介绍使用源码包部署 Apache ShenYu 网关。 启动 Apache ShenYu Admin 下载 2.4.0 下载 apache-shenyu-admin-bin-2.4.0-RELEASE.tar.gz 解压缩 apache-shenyu-admin-bin-2.4.0-RELEASE.ta</description></item><item><title>版本发布</title><link>/zh/projects/shenyu/change-log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/change-log/</guid><description>2.3.0 soul-admin Add &amp;lsquo;open&amp;rsquo; field to allow app path authentication or not in sign plugin. Optimize divide plugin to use common plugin template in soul-dashboard. Add default values and rule checks in plugin handler. Add resource management to allow user to add plugin, adjust menu and button resource and so on in soul-dashboard and soul-admin. Add menu and data permission in soul-admin. Add H2 stroe for soul-admin soul-bootstrap Add tars</description></item><item><title>线程模型</title><link>/zh/projects/shenyu/thread/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/thread/</guid><description>说明 本文主要介绍 ShenYu 的线程模型，以及各种场景的使用。 io与work线程 ShenYu 内置依赖 spring-webflux 而其底层是使用的 netty，这一块主要是使用的 netty 线程模型。 业</description></item><item><title>自定义Filter</title><link>/zh/projects/shenyu/custom-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/custom-filter/</guid><description>说明 本文是说明如何进行 org.springframework.web.server.WebFliter 的扩展。 跨域支持 新增 org.apache.shenyu.web.filter.CrossFilter 实现 WebFilter。 public class CrossFilter implements WebFilter { private static final String ALLOWED_HEADERS = &amp;quot;x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN,token,username,client&amp;quot;; private static final String ALLOWED_METHODS = &amp;quot;*&amp;quot;; private static final String ALLOWED_ORIGIN = &amp;quot;*&amp;quot;; private static final</description></item><item><title>自定义sign插件检验算法</title><link>/zh/projects/shenyu/custom-sign-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/custom-sign-algorithm/</guid><description>说明 用户可以自定义签名认证算法来实现验证。 扩展 默认的实现为 org.apache.shenyu.plugin.sign.service.Def</description></item><item><title>自定义搭建网关</title><link>/zh/projects/shenyu/deployment-custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/deployment-custom/</guid><description>本文介绍如何基于 Apache ShenYu 搭建属于你自己的网关。 启动Apache ShenYu Admin docker 用户参考 docker部署 Apache ShenYu Admin liunx/windows 用户参考源码部署 Apache ShenYu Admin 搭建自己的网关（推荐）</description></item><item><title>自定义网关返回数据格式</title><link>/zh/projects/shenyu/custom-result/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/custom-result/</guid><description>说明 本文是说明基于 ShenYu 网关返回自定义的数据个数。 网关需要统一的返回格式，而每个公司都有自己定义的一套，所以需要对次进行扩展。 默认实现 默认的实现</description></item><item><title>规则</title><link>/zh/projects/shenyu/rule-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/rule-design/</guid><description>to do.</description></item><item><title>选择器规则详解</title><link>/zh/projects/shenyu/selector-and-rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/selector-and-rule/</guid><description>选择器 选择器详解： 名称：为你的选择器起一个容易分辨的名字 类型：custom flow 是自定义流量。full flow 是全流量。自定义流量就是请求会走你下面的</description></item><item><title>配置流程介绍</title><link>/zh/projects/shenyu/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/config/</guid><description>说明 本篇是对 shenyu-admin 后台操作数据以后，同步到网关的流程介绍。 使用 用户可以在 shenyu-admin 后台任意修改数据，并马上同步到网关的 jvm 内存中。 同步 ShenYu 的插件数据，选择器</description></item><item><title>重定向插件</title><link>/zh/projects/shenyu/redirect-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/redirect-plugin/</guid><description>说明 ShenYu 网关在对目标服务进行代理调用的时候，还容许用户使用 redirect 插件来重定向请求。 插件设置 在 shenyu-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; redirect，设置为开启。 在网关的 pom.xml</description></item><item><title>限流插件</title><link>/zh/projects/shenyu/rate-limiter-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/shenyu/rate-limiter-plugin/</guid><description>说明 限流插件，是网关对流量管控限制核心的实现。 ShenYu 网关提供了多种限流算法的实现，包括令牌桶算法、并发的令牌桶算法、漏桶算法、滑动时间窗口算法。</description></item></channel></rss>